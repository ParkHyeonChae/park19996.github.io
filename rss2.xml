<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Today.log</title>
    <link>https://parkhyeonchae.github.io/</link>
    
    <image>
      <url>https://www.gravatar.com/avatar/1c7b783eebce74f6d18078289a8103b2</url>
      <title>Today.log</title>
      <link>https://parkhyeonchae.github.io/</link>
    </image>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Devlog</description>
    <pubDate>Sun, 22 Mar 2020 20:55:33 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Django 02. 가상환경 설정, Django 설치</title>
      <link>https://parkhyeonchae.github.io/2020/03/23/django-project-02/</link>
      <guid>https://parkhyeonchae.github.io/2020/03/23/django-project-02/</guid>
      <pubDate>Sun, 22 Mar 2020 17:46:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Django-02-가상환경-설정-Django-설치&quot;&gt;&lt;a href=&quot;#Django-02-가상환경-설정-Django-설치&quot; class=&quot;headerlink&quot; title=&quot;Django 02. 가상환경 설정, Django 설치&quot;&gt;&lt;/a&gt;Dja
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="Django-02-가상환경-설정-Django-설치"><a href="#Django-02-가상환경-설정-Django-설치" class="headerlink" title="Django 02. 가상환경 설정, Django 설치"></a>Django 02. 가상환경 설정, Django 설치</h1><blockquote><p>Python Virtualenv로 가상환경을 구축하고 Django프레임워크를 설치합니다.</p></blockquote><hr><h2 id="1-Python-Virtualenv-설치"><a href="#1-Python-Virtualenv-설치" class="headerlink" title="1. Python Virtualenv 설치"></a>1. Python Virtualenv 설치</h2><p>python 가상환경 pip인 virtualenv를 설치합니다.</p><p>설치환경은 <strong>window</strong>, python 버전은 <strong>3.7.4</strong> 입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install virtualenv</span><br></pre></td></tr></table></figure><p>Cs-web이란 프로젝트 폴더를 생성한 후 env란 이름의 가상환경폴더를 생성해줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd Cs-web</span><br><span class="line">$ virtualenv env</span><br></pre></td></tr></table></figure><p>window환경에서 가상환경을 실행하기 위해 설치된 django_env 폴더의 Scripts 경로로 이동 후 activate 명령을 통해 가상환경을 실행합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd env</span><br><span class="line">$ cd Scripts</span><br><span class="line">$ activate</span><br></pre></td></tr></table></figure><p>아래와 같이 가상환경이 실행된 것을 알 수 있습니다. 가상환경에서 빠져나오는 명령어는 deactivate입니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(env) C:\Users\&lt;username&gt;\desktop\Cs-Web\env\Scripts</span><br></pre></td></tr></table></figure><h2 id="2-Django-설치"><a href="#2-Django-설치" class="headerlink" title="2. Django 설치"></a>2. Django 설치</h2><p>현재 제가 사용하고 있는 django 버전은 3.0.2이므로 그대로 설치해주도록 하겠습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip insatll django&#x3D;&#x3D;3.0.2</span><br></pre></td></tr></table></figure><p>2020-03-23 기준으로 django 최신버전은 3.0.4 입니다.  <strong><a href="https://www.djangoproject.com/download/" target="_blank" rel="external nofollow noopener noreferrer">Django 최신버전 확인</a></strong></p><p>2버전에서 3버전으로 넘어오면서 MariaDB와 ASGI를 지원, 그 밖에 필터표현식, 자잘한 변경사항이 추가되었습니다.</p><p>프로젝트 진행중에 구글링을 많이 활용했었는데, django 3버전 미만의 소스코드들이 실행이 되지 않는 상황이 종종 있었습니다. 뿐만 아니라 django-multiselectfield 등과 같은 유용한 패키지들이 django 버전에 맞추어 업데이트가 되지 않는 상황이라 굳이 3버전을 설치할 필요는 없습니다.</p><p><strong><a href="https://docs.djangoproject.com/en/dev/releases/3.0/" target="_blank" rel="external nofollow noopener noreferrer">Django 3버전 릴리스노트</a></strong></p><p><strong><a href="https://pypi.org/search/?q=django" target="_blank" rel="external nofollow noopener noreferrer">Django 버전별 패키지 확인하기</a></strong></p><h2 id="3-Django-프로젝트-생성"><a href="#3-Django-프로젝트-생성" class="headerlink" title="3. Django 프로젝트 생성"></a>3. Django 프로젝트 생성</h2><p>cs_web 이름의 django 프로젝트를 생성하는 명령은 다음과 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin startproject cs_web</span><br></pre></td></tr></table></figure><p>아래와 같은 구조로 생성되게 됩니다.</p><p><img src="02-1.PNG" alt="django-project-02"></p><p>cs_web 경로로 이동 후 django 서버를 실행해봅니다.</p><p>django 서버 실행 명령어인 manage.py runserver는 개발환경에서의 <strong>django 테스트앱서버</strong>를 실행하는 것으로 프로젝트 완성 후 배포할 때에는 nginx, apache등을 사용해 웹서버를 분리 후 배포하는 것을 권장하고 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd cs_web</span><br><span class="line">$ python manage.py runserver</span><br></pre></td></tr></table></figure><p>127.0.0.1로 접속하면 다음과 같은 django 테스트서버가 실행된 것을 확인할 수 있습니다.</p><p><img src="02-2.PNG" alt="django-project-02"></p><hr>]]></content:encoded>
      
      <comments>https://parkhyeonchae.github.io/2020/03/23/django-project-02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Django 01. 프로젝트 소개</title>
      <link>https://parkhyeonchae.github.io/2020/03/22/django-project-01/</link>
      <guid>https://parkhyeonchae.github.io/2020/03/22/django-project-01/</guid>
      <pubDate>Sun, 22 Mar 2020 12:00:40 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Django-01-프로젝트-소개&quot;&gt;&lt;a href=&quot;#Django-01-프로젝트-소개&quot; class=&quot;headerlink&quot; title=&quot;Django 01. 프로젝트 소개&quot;&gt;&lt;/a&gt;Django 01. 프로젝트 소개&lt;/h1&gt;&lt;blockquote
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="Django-01-프로젝트-소개"><a href="#Django-01-프로젝트-소개" class="headerlink" title="Django 01. 프로젝트 소개"></a>Django 01. 프로젝트 소개</h1><blockquote><p>Django프레임워크로 개발한 프로젝트를 소개하고 각 App별 기능들을 설명합니다.</p></blockquote><hr><h2 id="1-포스팅-목적"><a href="#1-포스팅-목적" class="headerlink" title="1. 포스팅 목적"></a>1. 포스팅 목적</h2><p><strong>강의</strong> 포스팅이 아닌 <strong>개발기록</strong> 포스팅입니다. 졸업 후 홈페이지를 유지보수 할 학과 후배들을 위해 개발한 내용을 기록합니다.</p><p>Django에 대해 자세하게 알지 못하기에 구현과정 중 틀린부분 또는 Django Convention을 지키지 않았을 수도 있습니다. 프로젝트를 진행하며 공부한 내용을 기록한 글이라는 느낌으로 봐주시면 감사하겠습니다. 지적할 부분은 댓글로 남겨주시면 제가 더 공부해서 수정하겠습니다.</p><p>아래와 같은 개발스택을 사용하였습니다.</p><p><strong>Backend</strong> : Django/Python<br><strong>Frontend</strong> : Javascript, jQuery, Bootstarp4<br><strong>DB</strong> : Django 내장 DB (Sqlite3)<br><strong>서버</strong> : Centos7.6, Apache<br><strong>버전관리</strong> : Git</p><p><em>Django 프레임워크의 기초적인 개념은 포스팅하지 않기에 Django를 처음 접하시는 분들에겐 내용이 어려울 수 있습니다.  (후에 Django기초는 따로 포스팅 예정입니다.)</em></p><h2 id="2-프로젝트-소개"><a href="#2-프로젝트-소개" class="headerlink" title="2. 프로젝트 소개"></a>2. 프로젝트 소개</h2><p>대학교 졸업작품으로 진행한 프로젝트이며, 기존 학과홈페이지의 불편한 점을 개선하고, 원할한 정보전달과 학부생들의 소통을 목적으로 한 Django 프레임워크 기반의 학과홈페이지 프로젝트입니다.</p><h2 id="3-프로젝트-기능"><a href="#3-프로젝트-기능" class="headerlink" title="3. 프로젝트 기능"></a>3. 프로젝트 기능</h2><p>전체 프로젝트 구조는 아래와 같습니다.<br><img src="01.PNG" alt="django-project-01" align="left"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></p><p>프로젝트명은 reborn_web이며 이후 포스팅에서는 cs_web이란 프로젝트명으로 진행하겠습니다. </p><p><strong>users</strong><br>사용자 계정 App입니다. 기본적인 로그인, 회원가입, SMTP를 활용한 인증, 프로필수정, Ajax로 아이디/비밀번호 찾기, 비밀번호 변경, 회원탈퇴 등의 기능을 구현하였습니다.</p><p><strong>notice</strong><br>학과 공지사항 App입니다. 관리자 권한의 계정만 CRUD가 가능하며 게시글 검색, 공지사항 상단표시 등과 같은 기능을 추가하였습니다.</p><p><strong>free</strong><br>자유게시판 App입니다. 질문, 정보와 같은 카테고리를 추가하였고, 공지사항 App과 달리 Ajax로 댓글달기, 답글달기와 같은 기능을 추가하였습니다.</p><p><strong>anonymous</strong><br>익명게시판 App입니다. 페이스북 타임라인, 에브리타임을 모티브로 한 무한스크롤형식의 게시판입니다. 작성자는 익명으로 표시되며, 추천하기 등의 기능을 추가하였습니다.</p><p><strong>calender</strong><br>학과일정 App입니다. Django Model만 연결했으며 JavaScript의 구현 비중이 더 높기에 따로 포스팅은 하지 않겠습니다.</p><p><strong>timetable</strong><br>학과시험시간표 App입니다. 학년별 시험시간표, 사용자가 수강하는 과목만 선택하여 테이블형식으로 시험시간표를 볼수 있습니다. 관리자 권한의 사용자는 시험시간표를 업데이트 할 수 있으며, 마지막 업데이트 시간을 표시하게 구현하였습니다.</p><p><strong>about</strong><br>학생회 정보, 학과 내 동아리, 연구실 소개 등과 같은 기능을 추가한 App입니다.</p><h2 id="4-개발환경"><a href="#4-개발환경" class="headerlink" title="4. 개발환경"></a>4. 개발환경</h2><p><strong>OS</strong> : window10<br><strong>IDE</strong> : VsCode<br><strong>Python</strong> : 3.7.4<br><strong>Django</strong> : 3.0.2</p><h2 id="5-소스코드"><a href="#5-소스코드" class="headerlink" title="5. 소스코드"></a>5. 소스코드</h2><p>전반적인 Backend는 구현완료 상태이며, 메인화면 디자인 수정 작업 중에 있습니다. (2020/03/22)</p><p><strong><a href="https://github.com/ParkHyeonChae/Re-Born-Web" target="_blank" rel="external nofollow noopener noreferrer">GitHub 소스코드 전체보기</a></strong></p><hr>]]></content:encoded>
      
      <comments>https://parkhyeonchae.github.io/2020/03/22/django-project-01/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
